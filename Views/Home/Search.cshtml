@using PinkUmbrella.ViewModels.Home
@model SearchViewModel
@{
    ViewData["Title"] = "Search";
    var everythingClass = null == Model.Type ? "selected" : "";
}
<div>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <h1>@ViewData["Title"]</h1>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <ul class="navbar-nav flex-grow-1 highlight-selected">
                    <li class="nav-item @everythingClass">
                        <a class="nav-link text-dark" asp-controller="Home" asp-action="Search"><u>Everything</u></a>
                    </li>
                    @foreach (var rt in Enum.GetValues(typeof(SearchResultType)).Cast<SearchResultType>())
                    {
                        if (rt == SearchResultType.CivicDuty) {
                            continue;
                        }
                        var liClass = rt == Model.Type ? "selected" : "";
                        <li class="nav-item @liClass">
                            <a class="nav-link text-dark" asp-controller="Home" asp-action="Search" asp-route-t="@rt"><u>
                                @switch (rt) {
                                    case SearchResultType.ArchiveMedia:
                                    <span>Photos, Videos, and Media</span>
                                    break;
                                    case SearchResultType.CivicDuty:
                                    <span>Civic Duties</span>
                                    break;
                                    case SearchResultType.Inventory:
                                    <span>Inventories</span>
                                    break;
                                    case SearchResultType.Post:
                                    <span>Posts</span>
                                    break;
                                    case SearchResultType.Profile:
                                    <span>Profiles</span>
                                    break;
                                    case SearchResultType.Shop:
                                    <span>Local Businesses</span>
                                    break;
                                    default:
                                    <span>Unknown</span>
                                    break;
                                }
                            </u></a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
    <form asp-action="Search" asp-controller="Home" method="get">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-group">
            <input asp-for="SearchText" name="q" class="form-control" placeholder="Type keywords here..." />
            <span asp-validation-for="SearchText" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Order"></label>
            <div>@Model.GetPropertyDescription(nameof(Model.Order))</div>
            <select asp-for="Order" class="form-control">
                <partial name="_EnumOptions" model="new EnumViewModel() { Type = typeof(SearchResultOrder), Selected = Model.Order }" />
            </select>
            <span asp-validation-for="Order" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary">Search</button>
    </form>
    <p>@Model.Results.TotalResults results</p>
</div>

<div>
    @foreach (var result in Model.Results.Results) {
        <hr />
        switch (result.Type)
        {
            case SearchResultType.Profile:
            <partial name="SearchResult/ProfileSearchResult" model="result.Value" />
            break;
            case SearchResultType.Post:
            <partial name="SearchResult/PostSearchResult" model="result.Value" />
            break;
            case SearchResultType.ArchiveMedia:
            <partial name="SearchResult/ArchiveSearchResult" model="result.Value" />
            break;
            case SearchResultType.Inventory:
            <partial name="SearchResult/InventorySearchResult" model="result.Value" />
            break;
            case SearchResultType.CivicDuty:
            <partial name="SearchResult/CivicDutySearchResult" model="result.Value" />
            break;
            case SearchResultType.Shop:
            <partial name="SearchResult/ShopSearchResult" model="result.Value" />
            break;
            default:
            <div>No view for @result.Type</div>
            break;
        }
    }
</div>