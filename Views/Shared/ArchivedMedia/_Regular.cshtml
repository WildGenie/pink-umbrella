@model ArchivedMediaModel
@{
    var reactLike = new ReactViewModel() {
        Type = ReactionType.Like,
        Subject = ReactionSubject.ArchivedMedia,
        ToId = Model.Id,
        HasReacted = Model.HasLiked,
        Count = Model.LikeCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPoster,
    };
    var reactDislike = new ReactViewModel() {
        Type = ReactionType.Dislike,
        Subject = ReactionSubject.ArchivedMedia,
        ToId = Model.Id,
        HasReacted = Model.HasDisliked,
        Count = Model.DislikeCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPoster,
    };
    var reactBlock = new ReactViewModel() {
        Type = ReactionType.Block,
        Subject = ReactionSubject.ArchivedMedia,
        ToId = Model.Id,
        HasReacted = false,
        Count = Model.BlockCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPoster,
        ManualReactionUrl = "/Media/Block/" + Model.Id,
        ResponseHandler = "archived-media-replacewith",
    };
    var reactReport = new ReactViewModel() {
        Type = ReactionType.Report,
        Subject = ReactionSubject.ArchivedMedia,
        ToId = Model.Id,
        HasReacted = false,
        Count = Model.ReportCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPoster,
        ManualReactionUrl = "/Media/Report/" + Model.Id,
        ResponseHandler = "archived-media-replacewith",
    };

    var reactions = new List<ReactViewModel>() {
        reactLike, reactDislike, reactBlock, reactReport,
    };

    var ext  = System.IO.Path.GetExtension(Model.Path);
}
<div class="contains-goto archived-media">
    <a class="goto" asp-controller="Archive" asp-action="Media" asp-route-id="@Model.Id">goto</a>
    <p>
        <span>@Model.DisplayName</span><i> by </i>
        <span class="contains-goto">
            <b>
                @Model.User.DisplayName
            </b>
            <i>@@@Model.User.Handle</i>
            <a class="goto" asp-controller="Profile" asp-action="Index" asp-route-id="@Model.UserId">goto</a>
        </span>
        &bull; <partial name="_Timestamp" model="Model.WhenCreated" /></li>
        @if (Model.Visibility != Visibility.VISIBLE_TO_WORLD)
        {
            switch (Model.Visibility)
            {
                case Visibility.HIDDEN:
                <span>&bull; Hidden to everyone</span>
                break;
                case Visibility.VISIBLE_TO_REGISTERED:
                <span>&bull; Visible to other users on this site</span>
                break;
                case Visibility.VISIBLE_TO_FOLLOWERS:
                if (Model.UserId == Model.ViewerId)
                {
                <span>&bull; Only visible to your followers</span>
                }
                else
                {
                <span>&bull; Only visible to this user's followers</span>
                }
                break;
            }
        }
    </p>
    <p class="text-center">@Model.Description</p>
    @switch (ext)
    {
        case ".png":
        <img src="/Archive/Raw/@Model.Path" class="archived-media image" />
        break;
        default:
        <span>unknown type @ext</span>
        break;
    }
    
    <partial name="Button/ReactButtonList" model="reactions" /></li>
</div>