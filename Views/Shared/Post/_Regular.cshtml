@model PostModel
@{
    var reactLike = new ReactViewModel() {
        Type = ReactionType.Like,
        Subject = ReactionSubject.Post,
        ToId = Model.Id,
        HasReacted = Model.HasLiked,
        Count = Model.LikeCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPoster,
    };
    var reactDislike = new ReactViewModel() {
        Type = ReactionType.Dislike,
        Subject = ReactionSubject.Post,
        ToId = Model.Id,
        HasReacted = Model.HasDisliked,
        Count = Model.DislikeCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPoster,
    };
    var reactBlock = new ReactViewModel() {
        Type = ReactionType.Block,
        Subject = ReactionSubject.Post,
        ToId = Model.Id,
        HasReacted = false,
        Count = Model.BlockCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPoster,
        ManualReactionUrl = "/Post/Block/" + Model.Id,
        ResponseHandler = "post-replacewith",
    };
    var reactReport = new ReactViewModel() {
        Type = ReactionType.Report,
        Subject = ReactionSubject.Post,
        ToId = Model.Id,
        HasReacted = false,
        Count = Model.ReportCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPoster,
        ManualReactionUrl = "/Post/Report/" + Model.Id,
        ResponseHandler = "post-replacewith",
    };

    var reactions = new List<ReactViewModel>() {
        reactLike, reactDislike, reactBlock, reactReport,
    };

    var tags = new TagEditorViewModel() { Tags = Model.Tags };
}
<div class="contains-goto post">
    <a class="goto" asp-controller="Post" asp-action="Index" asp-route-id="@Model.Id">goto</a>
    <p>
        <partial name="Profile/Goto" model="Model.User" />
        &bull; <partial name="_Timestamp" model="Model.WhenCreated" />
        <partial name="_VisibilityStatus" />
    </p>
    @switch (Model.PostType)
    {
        case PostType.Text:
        <partial name="Post/Text" />
        break;
        default:
        <div>No view for @Model.PostType</div>
        break;
    }
    @if (Model.Mentions.Any())
    {
        <span>Mentions:</span>
        <ul>
            @foreach (var mention in Model.Mentions) {
                <li class="contains-goto">@mention.MentionedUser.DisplayName<a class="goto" asp-controller="Profile" asp-action="Index" asp-route-id="@mention.MentionedUserId">goto</a></li>
            }
        </ul>
    }
    <partial name="Button/ReactButtonList" model="reactions" /></li>
    <partial name="Tag/Display" model="tags" />
</div>