@model PinkUmbrella.ViewModels.Account.RegisterViewModel
@{
    ViewData["Title"] = "Register";
}
@if (await _settings.FeatureManager.IsEnabledAsync(nameof(FunctionUserRegister)))
{
<div class="row">
    <div class="col-md-6" style="margin: 0 auto">
        <h1>@ViewData["Title"]</h1>
        <form asp-route-returnUrl="@Model.ReturnUrl" method="POST" asp-controller="Account" asp-action="Register">
            @if (!string.IsNullOrWhiteSpace(Model.Code))
            {
                <input type="hidden" name="code" value="@Model.Code" />
            }
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.DisplayName"></label>
                <small>@Model.Input.GetPropertyDescription(nameof(Model.Input.DisplayName))</small>
                <input asp-for="Input.DisplayName" class="form-control" placeholder="@Model.Input.GetPropertyPlaceHolder(nameof(Model.Input.DisplayName))" data-debug-value="@Model.Input.GetDebugValue(nameof(Model.Input.DisplayName))" autocomplete="off" />
                <span asp-validation-for="Input.DisplayName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <small>@Model.Input.GetPropertyDescription(nameof(Model.Input.Email))</small>
                <input asp-for="Input.Email" class="form-control" placeholder="@Model.Input.GetPropertyPlaceHolder(nameof(Model.Input.Email))" data-debug-value="@Model.Input.GetDebugValue(nameof(Model.Input.Email))" autocomplete="off" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Handle"></label>
                <small>@Model.Input.GetPropertyDescription(nameof(Model.Input.Handle))</small>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="basic-addon1">@@</span>
                    </div>
                    <input asp-for="Input.Handle" class="form-control js-keypress-validate" placeholder="@Model.Input.GetPropertyPlaceHolder(nameof(Model.Input.Handle))" data-debug-value="@Model.Input.GetDebugValue(nameof(Model.Input.Handle))" autocomplete="off" />
                </div>
                <span asp-validation-for="Input.Handle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <small>@Model.Input.GetPropertyDescription(nameof(Model.Input.Password))</small>
                <input asp-for="Input.Password" class="form-control" placeholder="@_strings.PasswordPlaceholder" />
                <partial name="_PasswordHints" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>
                <small>@Model.Input.GetPropertyDescription(nameof(Model.Input.ConfirmPassword))</small>
                <input asp-for="Input.ConfirmPassword" class="form-control" placeholder="@_strings.PasswordPlaceholder" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
            <partial name="Button/DebugValuesButton" />
        </form>
    </div>
</div>
}
else
{
    <p>Registering has been turned off.</p>
}
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}