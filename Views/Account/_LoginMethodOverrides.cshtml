@using PinkUmbrella.Models.Auth
@model PinkUmbrella.ViewModels.Account.LoginSettingsViewModel
<h3>Login Methods</h3>
<form method="post" asp-action="ChangePassword" asp-controller="Account">
    @foreach (var method in Enum.GetValues(typeof(UserLoginMethod)).Cast<UserLoginMethod>())
    {
        switch (method)
        {
            case UserLoginMethod.FIDO when !await _settings.FeatureManager.IsEnabledAsync(nameof(FunctionUserLoginFIDO)):
            continue;
            case UserLoginMethod.PublicPrivateKey when !await _settings.FeatureManager.IsEnabledAsync(nameof(FunctionUserLoginPublicKey)):
            continue;
            case UserLoginMethod.OAuth when !await _settings.FeatureManager.IsEnabledAsync(nameof(FunctionUserLoginOAuth)):
            continue;
        }
        UserLoginMethodModel overridden = null;
        var isChecked = false;
        if (Model.MethodOverrides.TryGetValue(method, out overridden))
        {
            isChecked = overridden.Enabled;
        }
        else
        {
            isChecked = Model.GetMethodDefault(method);
        }
        <div class="form-group">
            <input disabled type="checkbox" class="form-check float-right" checked="@isChecked" />
            <a asp-action="SetupLoginMethod" asp-route-method="@method" asp-route-ReturnUrl="@Context.Request.Path" class="control-label">@method.GetDisplayName():</a>
            <small>@method.GetDescription()</small>
        </div>
    }
</form>