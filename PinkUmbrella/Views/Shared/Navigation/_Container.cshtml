@using PinkUmbrella.ViewModels
@model NavigationViewModel
@{
    var controllerName = (string) ViewData["Controller"];
    var actionName = (string) ViewData["Action"];
}
<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
    <div class="container">
        <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
            <ul class="navbar-nav flex-grow-1 highlight-selected">
                @foreach (var node in Model.Nodes)
                {
                    var isSelected = !string.IsNullOrWhiteSpace(actionName) && (
                                    actionName == node.Action || 
                                    (node.Nodes != null && node.Nodes.Any(n => n.Action == actionName))
                    );
                    var selectedLiClass = isSelected ? "selected" : "";
                    <li class="nav-item @node.Classes @selectedLiClass">
                        @switch (node.Type)
                        {
                            case NavigationViewModel.NavType.Link:
                                <partial name="Button/Link" model="node" />
                                if (node.Nodes != null && isSelected)
                                {
                                    var subnodeIndex = 0;
                                    <div class="select_before"></div>
                                    <select class="js-contains-selectable-goto" data-selectable-gotos="#@node.Controller-@node.Action-gotos">
                                        <option selected="@(actionName == node.Action)" value="0">Everything</option>
                                        @foreach (var subnode in node.Nodes)
                                        {
                                            subnodeIndex++;
                                            var isSubSelected = actionName == subnode.Action;
                                            <option selected="@isSubSelected" value="@subnodeIndex">@subnode.Text</option>
                                        }
                                    </select>
                                    <div style="display: none;" id="@node.Controller-@node.Action-gotos">
                                        <partial name="Button/Link" model="node" />
                                        @foreach (var subnode in node.Nodes)
                                        {
                                            <partial name="Button/Link" model="subnode" />
                                        }
                                    </div>
                                }
                            break;
                            case NavigationViewModel.NavType.Separator:
                                <div class="my-2">
                                    <span class="px-1 my-2">&nbsp;&nbsp;</span><span class="border-left border-dark my-2">&nbsp;</span><span class="px-1 my-2">&nbsp;</span>
                                </div>
                            break;
                            case NavigationViewModel.NavType.Space:
                                <span>&nbsp;</span>
                            break;
                        }
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>