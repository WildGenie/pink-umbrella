@model Estuary.Objects.Common.Note
@{
    var parts = new List<string> { Html.Encode(Model.content) };
    var tagLookup = new Dictionary<string, Estuary.Core.BaseObject>();
    if (Model.tag != null)
    {
        foreach (var linkedTag in Model.tag.items)
        {
            var tag = $"#{linkedTag.content}";
            var split = new System.Text.RegularExpressions.Regex($"({tag})");
            tagLookup[tag] = linkedTag;
            parts = parts.SelectMany(p => split.Split(p)).ToList();
        }
    }
}
<div class="card-title p-2">
    <partial name="Person/Goto" model="Model.from?.items?.FirstOrDefault()" />
    noted <partial name="_Timestamp" model="Model.published" />
</div>
<div class="card-body p-2">
    <span class="js-tag-display">
        &ldquo;
        @foreach (var p in parts)
        {
            if (tagLookup.TryGetValue(p, out var tag))
            {
                <partial name="Tag/Item" model="tag" />
            }
            else
            {
                @Html.Raw(p)
            }
        }
        &rdquo;
    </span>
</div>