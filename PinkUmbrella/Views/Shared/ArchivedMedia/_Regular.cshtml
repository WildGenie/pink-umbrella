@model Estuary.Core.BaseObject
@{
    var reactLike = new ReactViewModel() {
        Type = ReactionType.Like,
        ToId = Model.PublicId,
        HasReacted = Model.HasLiked,
        Count = Model.LikeCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPublisher,
    };
    var reactDislike = new ReactViewModel() {
        Type = ReactionType.Dislike,
        ToId = Model.PublicId,
        HasReacted = Model.HasDisliked,
        Count = Model.DislikeCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPublisher,
    };
    var reactBlock = new ReactViewModel() {
        Type = ReactionType.Block,
        ToId = Model.PublicId,
        HasReacted = false,
        Count = Model.BlockCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPublisher,
        ManualReactionUrl = "/Media/Block/" + Model.PublicId,
        ResponseHandler = "archived-media-replacewith",
    };
    var reactReport = new ReactViewModel() {
        Type = ReactionType.Report,
        ToId = Model.PublicId,
        HasReacted = false,
        Count = Model.ReportCount,
        ViewerId = Model.ViewerId,
        Enabled = !Model.ViewerIsPublisher,
        ManualReactionUrl = "/Media/Report/" + Model.PublicId,
        ResponseHandler = "archived-media-replacewith",
    };

    var reactions = new List<ReactViewModel>() {
        reactLike, reactDislike, reactBlock, reactReport,
    };

    var ext  = System.IO.Path.GetExtension(Model.url.content);
}
<div class="contains-goto archived-media">
    <a class="goto" asp-controller="Archive" asp-action="Media" asp-route-id="@Model.PublicId">goto</a>
    <p>
        <span>@Model.DisplayName</span><i> by </i>
        partial name="Person/Goto" model="Model.User"
        &bull; <partial name="_Timestamp" model="Model.published" /></li>
        <partial name="_VisibilityStatus" model="Model" />
    </p>
    <p class="text-center">@Model.summary</p>
    @switch (ext)
    {
        case ".png":
        <img src="/Archive/Raw/@Model.url.content" class="archived-media image" />
        break;
        default:
        <span>unknown type @ext</span>
        break;
    }
    @if (!string.IsNullOrWhiteSpace(Model.attributedTo.content))
    {
        <p>Attribution: @Model.attributedTo.content</p>
    }
    
    <partial name="Button/ReactButtonList" model="reactions" /></li>
</div>